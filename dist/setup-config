Saved package config for HaskellPlayground-0.1.0.0 written by Cabal-1.18.1.5 using ghc-7.8
LocalBuildInfo {configFlags = ConfigFlags {configPrograms = [], configProgramPaths = [("ghc","ghc")], configProgramArgs = [], configProgramPathExtra = ["/home/jharjanto/.cabal/bin"], configHcFlavor = Flag GHC, configHcPath = NoFlag, configHcPkg = NoFlag, configVanillaLib = Flag True, configProfLib = Flag False, configSharedLib = NoFlag, configDynExe = Flag False, configProfExe = Flag False, configConfigureArgs = [], configOptimization = Flag NormalOptimisation, configProgPrefix = Flag "", configProgSuffix = Flag "", configInstallDirs = InstallDirs {prefix = Flag "/home/jharjanto/.cabal", bindir = NoFlag, libdir = NoFlag, libsubdir = NoFlag, dynlibdir = NoFlag, libexecdir = NoFlag, progdir = NoFlag, includedir = NoFlag, datadir = NoFlag, datasubdir = NoFlag, docdir = NoFlag, mandir = NoFlag, htmldir = NoFlag, haddockdir = NoFlag, sysconfdir = NoFlag}, configScratchDir = NoFlag, configExtraLibDirs = [], configExtraIncludeDirs = [], configDistPref = Flag "dist", configVerbosity = Flag Normal, configUserInstall = Flag True, configPackageDBs = [], configGHCiLib = Flag False, configSplitObjs = Flag False, configStripExes = Flag True, configConstraints = [Dependency (PackageName "split") (ThisVersion (Version {versionBranch = [0,2,3], versionTags = []})),Dependency (PackageName "base") (ThisVersion (Version {versionBranch = [4,7,0,2], versionTags = []}))], configConfigurationsFlags = [], configTests = Flag False, configBenchmarks = Flag False, configLibCoverage = Flag False}, extraConfigArgs = [], installDirTemplates = InstallDirs {prefix = "/home/jharjanto/.cabal", bindir = "$prefix/bin", libdir = "$prefix/lib", libsubdir = "$arch-$os-$compiler/$pkgid", dynlibdir = "$libdir", libexecdir = "$prefix/libexec", progdir = "$libdir/hugs/programs", includedir = "$libdir/$libsubdir/include", datadir = "$prefix/share", datasubdir = "$arch-$os-$compiler/$pkgid", docdir = "$datadir/doc/$arch-$os-$compiler/$pkgid", mandir = "$datadir/man", htmldir = "$docdir/html", haddockdir = "$htmldir", sysconfdir = "$prefix/etc"}, compiler = Compiler {compilerId = CompilerId GHC (Version {versionBranch = [7,8,4], versionTags = []}), compilerLanguages = [(Haskell98,"-XHaskell98"),(Haskell2010,"-XHaskell2010")], compilerExtensions = [(UnknownExtension "Haskell98","-XHaskell98"),(UnknownExtension "Haskell2010","-XHaskell2010"),(EnableExtension Unsafe,"-XUnsafe"),(EnableExtension Trustworthy,"-XTrustworthy"),(EnableExtension Safe,"-XSafe"),(EnableExtension CPP,"-XCPP"),(DisableExtension CPP,"-XNoCPP"),(EnableExtension PostfixOperators,"-XPostfixOperators"),(DisableExtension PostfixOperators,"-XNoPostfixOperators"),(EnableExtension TupleSections,"-XTupleSections"),(DisableExtension TupleSections,"-XNoTupleSections"),(EnableExtension PatternGuards,"-XPatternGuards"),(DisableExtension PatternGuards,"-XNoPatternGuards"),(EnableExtension UnicodeSyntax,"-XUnicodeSyntax"),(DisableExtension UnicodeSyntax,"-XNoUnicodeSyntax"),(EnableExtension MagicHash,"-XMagicHash"),(DisableExtension MagicHash,"-XNoMagicHash"),(EnableExtension ExistentialQuantification,"-XExistentialQuantification"),(DisableExtension ExistentialQuantification,"-XNoExistentialQuantification"),(EnableExtension KindSignatures,"-XKindSignatures"),(DisableExtension KindSignatures,"-XNoKindSignatures"),(EnableExtension RoleAnnotations,"-XRoleAnnotations"),(DisableExtension RoleAnnotations,"-XNoRoleAnnotations"),(EnableExtension EmptyDataDecls,"-XEmptyDataDecls"),(DisableExtension EmptyDataDecls,"-XNoEmptyDataDecls"),(EnableExtension ParallelListComp,"-XParallelListComp"),(DisableExtension ParallelListComp,"-XNoParallelListComp"),(EnableExtension TransformListComp,"-XTransformListComp"),(DisableExtension TransformListComp,"-XNoTransformListComp"),(EnableExtension MonadComprehensions,"-XMonadComprehensions"),(DisableExtension MonadComprehensions,"-XNoMonadComprehensions"),(EnableExtension ForeignFunctionInterface,"-XForeignFunctionInterface"),(DisableExtension ForeignFunctionInterface,"-XNoForeignFunctionInterface"),(EnableExtension UnliftedFFITypes,"-XUnliftedFFITypes"),(DisableExtension UnliftedFFITypes,"-XNoUnliftedFFITypes"),(EnableExtension InterruptibleFFI,"-XInterruptibleFFI"),(DisableExtension InterruptibleFFI,"-XNoInterruptibleFFI"),(EnableExtension CApiFFI,"-XCApiFFI"),(DisableExtension CApiFFI,"-XNoCApiFFI"),(EnableExtension GHCForeignImportPrim,"-XGHCForeignImportPrim"),(DisableExtension GHCForeignImportPrim,"-XNoGHCForeignImportPrim"),(UnknownExtension "JavaScriptFFI","-XJavaScriptFFI"),(UnknownExtension "NoJavaScriptFFI","-XNoJavaScriptFFI"),(EnableExtension LiberalTypeSynonyms,"-XLiberalTypeSynonyms"),(DisableExtension LiberalTypeSynonyms,"-XNoLiberalTypeSynonyms"),(EnableExtension PolymorphicComponents,"-XPolymorphicComponents"),(DisableExtension PolymorphicComponents,"-XNoPolymorphicComponents"),(EnableExtension Rank2Types,"-XRank2Types"),(DisableExtension Rank2Types,"-XNoRank2Types"),(EnableExtension RankNTypes,"-XRankNTypes"),(DisableExtension RankNTypes,"-XNoRankNTypes"),(EnableExtension ImpredicativeTypes,"-XImpredicativeTypes"),(DisableExtension ImpredicativeTypes,"-XNoImpredicativeTypes"),(EnableExtension TypeOperators,"-XTypeOperators"),(DisableExtension TypeOperators,"-XNoTypeOperators"),(EnableExtension ExplicitNamespaces,"-XExplicitNamespaces"),(DisableExtension ExplicitNamespaces,"-XNoExplicitNamespaces"),(EnableExtension RecursiveDo,"-XRecursiveDo"),(DisableExtension RecursiveDo,"-XNoRecursiveDo"),(EnableExtension DoRec,"-XDoRec"),(DisableExtension DoRec,"-XNoDoRec"),(EnableExtension Arrows,"-XArrows"),(DisableExtension Arrows,"-XNoArrows"),(EnableExtension ParallelArrays,"-XParallelArrays"),(DisableExtension ParallelArrays,"-XNoParallelArrays"),(EnableExtension TemplateHaskell,"-XTemplateHaskell"),(DisableExtension TemplateHaskell,"-XNoTemplateHaskell"),(EnableExtension QuasiQuotes,"-XQuasiQuotes"),(DisableExtension QuasiQuotes,"-XNoQuasiQuotes"),(EnableExtension ImplicitPrelude,"-XImplicitPrelude"),(DisableExtension ImplicitPrelude,"-XNoImplicitPrelude"),(EnableExtension RecordWildCards,"-XRecordWildCards"),(DisableExtension RecordWildCards,"-XNoRecordWildCards"),(EnableExtension NamedFieldPuns,"-XNamedFieldPuns"),(DisableExtension NamedFieldPuns,"-XNoNamedFieldPuns"),(EnableExtension RecordPuns,"-XRecordPuns"),(DisableExtension RecordPuns,"-XNoRecordPuns"),(EnableExtension DisambiguateRecordFields,"-XDisambiguateRecordFields"),(DisableExtension DisambiguateRecordFields,"-XNoDisambiguateRecordFields"),(EnableExtension OverloadedStrings,"-XOverloadedStrings"),(DisableExtension OverloadedStrings,"-XNoOverloadedStrings"),(EnableExtension NumDecimals,"-XNumDecimals"),(DisableExtension NumDecimals,"-XNoNumDecimals"),(EnableExtension OverloadedLists,"-XOverloadedLists"),(DisableExtension OverloadedLists,"-XNoOverloadedLists"),(EnableExtension GADTs,"-XGADTs"),(DisableExtension GADTs,"-XNoGADTs"),(EnableExtension GADTSyntax,"-XGADTSyntax"),(DisableExtension GADTSyntax,"-XNoGADTSyntax"),(EnableExtension ViewPatterns,"-XViewPatterns"),(DisableExtension ViewPatterns,"-XNoViewPatterns"),(EnableExtension TypeFamilies,"-XTypeFamilies"),(DisableExtension TypeFamilies,"-XNoTypeFamilies"),(EnableExtension BangPatterns,"-XBangPatterns"),(DisableExtension BangPatterns,"-XNoBangPatterns"),(EnableExtension MonomorphismRestriction,"-XMonomorphismRestriction"),(DisableExtension MonomorphismRestriction,"-XNoMonomorphismRestriction"),(EnableExtension NPlusKPatterns,"-XNPlusKPatterns"),(DisableExtension NPlusKPatterns,"-XNoNPlusKPatterns"),(EnableExtension DoAndIfThenElse,"-XDoAndIfThenElse"),(DisableExtension DoAndIfThenElse,"-XNoDoAndIfThenElse"),(EnableExtension RebindableSyntax,"-XRebindableSyntax"),(DisableExtension RebindableSyntax,"-XNoRebindableSyntax"),(EnableExtension ConstraintKinds,"-XConstraintKinds"),(DisableExtension ConstraintKinds,"-XNoConstraintKinds"),(EnableExtension PolyKinds,"-XPolyKinds"),(DisableExtension PolyKinds,"-XNoPolyKinds"),(EnableExtension DataKinds,"-XDataKinds"),(DisableExtension DataKinds,"-XNoDataKinds"),(EnableExtension InstanceSigs,"-XInstanceSigs"),(DisableExtension InstanceSigs,"-XNoInstanceSigs"),(EnableExtension MonoPatBinds,"-XMonoPatBinds"),(DisableExtension MonoPatBinds,"-XNoMonoPatBinds"),(EnableExtension ExplicitForAll,"-XExplicitForAll"),(DisableExtension ExplicitForAll,"-XNoExplicitForAll"),(UnknownExtension "AlternativeLayoutRule","-XAlternativeLayoutRule"),(UnknownExtension "NoAlternativeLayoutRule","-XNoAlternativeLayoutRule"),(UnknownExtension "AlternativeLayoutRuleTransitional","-XAlternativeLayoutRuleTransitional"),(UnknownExtension "NoAlternativeLayoutRuleTransitional","-XNoAlternativeLayoutRuleTransitional"),(EnableExtension DatatypeContexts,"-XDatatypeContexts"),(DisableExtension DatatypeContexts,"-XNoDatatypeContexts"),(EnableExtension NondecreasingIndentation,"-XNondecreasingIndentation"),(DisableExtension NondecreasingIndentation,"-XNoNondecreasingIndentation"),(UnknownExtension "RelaxedLayout","-XRelaxedLayout"),(UnknownExtension "NoRelaxedLayout","-XNoRelaxedLayout"),(EnableExtension TraditionalRecordSyntax,"-XTraditionalRecordSyntax"),(DisableExtension TraditionalRecordSyntax,"-XNoTraditionalRecordSyntax"),(EnableExtension LambdaCase,"-XLambdaCase"),(DisableExtension LambdaCase,"-XNoLambdaCase"),(EnableExtension MultiWayIf,"-XMultiWayIf"),(DisableExtension MultiWayIf,"-XNoMultiWayIf"),(EnableExtension MonoLocalBinds,"-XMonoLocalBinds"),(DisableExtension MonoLocalBinds,"-XNoMonoLocalBinds"),(EnableExtension RelaxedPolyRec,"-XRelaxedPolyRec"),(DisableExtension RelaxedPolyRec,"-XNoRelaxedPolyRec"),(EnableExtension ExtendedDefaultRules,"-XExtendedDefaultRules"),(DisableExtension ExtendedDefaultRules,"-XNoExtendedDefaultRules"),(EnableExtension ImplicitParams,"-XImplicitParams"),(DisableExtension ImplicitParams,"-XNoImplicitParams"),(EnableExtension ScopedTypeVariables,"-XScopedTypeVariables"),(DisableExtension ScopedTypeVariables,"-XNoScopedTypeVariables"),(EnableExtension AllowAmbiguousTypes,"-XAllowAmbiguousTypes"),(DisableExtension AllowAmbiguousTypes,"-XNoAllowAmbiguousTypes"),(EnableExtension PatternSignatures,"-XPatternSignatures"),(DisableExtension PatternSignatures,"-XNoPatternSignatures"),(EnableExtension UnboxedTuples,"-XUnboxedTuples"),(DisableExtension UnboxedTuples,"-XNoUnboxedTuples"),(EnableExtension StandaloneDeriving,"-XStandaloneDeriving"),(DisableExtension StandaloneDeriving,"-XNoStandaloneDeriving"),(EnableExtension DeriveDataTypeable,"-XDeriveDataTypeable"),(DisableExtension DeriveDataTypeable,"-XNoDeriveDataTypeable"),(EnableExtension AutoDeriveTypeable,"-XAutoDeriveTypeable"),(DisableExtension AutoDeriveTypeable,"-XNoAutoDeriveTypeable"),(EnableExtension DeriveFunctor,"-XDeriveFunctor"),(DisableExtension DeriveFunctor,"-XNoDeriveFunctor"),(EnableExtension DeriveTraversable,"-XDeriveTraversable"),(DisableExtension DeriveTraversable,"-XNoDeriveTraversable"),(EnableExtension DeriveFoldable,"-XDeriveFoldable"),(DisableExtension DeriveFoldable,"-XNoDeriveFoldable"),(EnableExtension DeriveGeneric,"-XDeriveGeneric"),(DisableExtension DeriveGeneric,"-XNoDeriveGeneric"),(EnableExtension DefaultSignatures,"-XDefaultSignatures"),(DisableExtension DefaultSignatures,"-XNoDefaultSignatures"),(EnableExtension TypeSynonymInstances,"-XTypeSynonymInstances"),(DisableExtension TypeSynonymInstances,"-XNoTypeSynonymInstances"),(EnableExtension FlexibleContexts,"-XFlexibleContexts"),(DisableExtension FlexibleContexts,"-XNoFlexibleContexts"),(EnableExtension FlexibleInstances,"-XFlexibleInstances"),(DisableExtension FlexibleInstances,"-XNoFlexibleInstances"),(EnableExtension ConstrainedClassMethods,"-XConstrainedClassMethods"),(DisableExtension ConstrainedClassMethods,"-XNoConstrainedClassMethods"),(EnableExtension MultiParamTypeClasses,"-XMultiParamTypeClasses"),(DisableExtension MultiParamTypeClasses,"-XNoMultiParamTypeClasses"),(EnableExtension NullaryTypeClasses,"-XNullaryTypeClasses"),(DisableExtension NullaryTypeClasses,"-XNoNullaryTypeClasses"),(EnableExtension FunctionalDependencies,"-XFunctionalDependencies"),(DisableExtension FunctionalDependencies,"-XNoFunctionalDependencies"),(EnableExtension GeneralizedNewtypeDeriving,"-XGeneralizedNewtypeDeriving"),(DisableExtension GeneralizedNewtypeDeriving,"-XNoGeneralizedNewtypeDeriving"),(EnableExtension OverlappingInstances,"-XOverlappingInstances"),(DisableExtension OverlappingInstances,"-XNoOverlappingInstances"),(EnableExtension UndecidableInstances,"-XUndecidableInstances"),(DisableExtension UndecidableInstances,"-XNoUndecidableInstances"),(EnableExtension IncoherentInstances,"-XIncoherentInstances"),(DisableExtension IncoherentInstances,"-XNoIncoherentInstances"),(EnableExtension PackageImports,"-XPackageImports"),(DisableExtension PackageImports,"-XNoPackageImports"),(EnableExtension NegativeLiterals,"-XNegativeLiterals"),(DisableExtension NegativeLiterals,"-XNoNegativeLiterals"),(EnableExtension EmptyCase,"-XEmptyCase"),(DisableExtension EmptyCase,"-XNoEmptyCase"),(UnknownExtension "PatternSynonyms","-XPatternSynonyms"),(UnknownExtension "NoPatternSynonyms","-XNoPatternSynonyms")]}, hostPlatform = Platform X86_64 Linux, buildDir = "dist/build", scratchDir = "dist/scratch", componentsConfigs = [(CLibName,LibComponentLocalBuildInfo {componentPackageDeps = [(InstalledPackageId "base-4.7.0.2-cb23b5265b6e147094c0cd9ac819acb1",PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,7,0,2], versionTags = []}}),(InstalledPackageId "split-0.2.3-794204cf751e1aafa9732748edd57a6e",PackageIdentifier {pkgName = PackageName "split", pkgVersion = Version {versionBranch = [0,2,3], versionTags = []}})], componentLibraries = [LibraryName "HSHaskellPlayground-0.1.0.0"]},[]),(CExeName "HaskellPlayground-exe",ExeComponentLocalBuildInfo {componentPackageDeps = [(InstalledPackageId "base-4.7.0.2-cb23b5265b6e147094c0cd9ac819acb1",PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,7,0,2], versionTags = []}}),(InstalledPackageId "split-0.2.3-794204cf751e1aafa9732748edd57a6e",PackageIdentifier {pkgName = PackageName "split", pkgVersion = Version {versionBranch = [0,2,3], versionTags = []}}),(InstalledPackageId "HaskellPlayground-0.1.0.0-inplace",PackageIdentifier {pkgName = PackageName "HaskellPlayground", pkgVersion = Version {versionBranch = [0,1,0,0], versionTags = []}})]},[CLibName])], installedPkgs = PackageIndex (fromList [(InstalledPackageId "base-4.7.0.2-cb23b5265b6e147094c0cd9ac819acb1",InstalledPackageInfo {installedPackageId = InstalledPackageId "base-4.7.0.2-cb23b5265b6e147094c0cd9ac819acb1", sourcePackageId = PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,7,0,2], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "Basic libraries", description = "This package contains the \"Prelude\" and its support libraries,\nand a large collection of useful libraries ranging from data\nstructures to parsing combinators and debugging utilities.", category = "Prelude", exposed = True, exposedModules = [ModuleName ["Control","Applicative"],ModuleName ["Control","Arrow"],ModuleName ["Control","Category"],ModuleName ["Control","Concurrent"],ModuleName ["Control","Concurrent","Chan"],ModuleName ["Control","Concurrent","MVar"],ModuleName ["Control","Concurrent","QSem"],ModuleName ["Control","Concurrent","QSemN"],ModuleName ["Control","Exception"],ModuleName ["Control","Exception","Base"],ModuleName ["Control","Monad"],ModuleName ["Control","Monad","Fix"],ModuleName ["Control","Monad","Instances"],ModuleName ["Control","Monad","ST"],ModuleName ["Control","Monad","ST","Lazy"],ModuleName ["Control","Monad","ST","Lazy","Safe"],ModuleName ["Control","Monad","ST","Lazy","Unsafe"],ModuleName ["Control","Monad","ST","Safe"],ModuleName ["Control","Monad","ST","Strict"],ModuleName ["Control","Monad","ST","Unsafe"],ModuleName ["Control","Monad","Zip"],ModuleName ["Data","Bits"],ModuleName ["Data","Bool"],ModuleName ["Data","Char"],ModuleName ["Data","Coerce"],ModuleName ["Data","Complex"],ModuleName ["Data","Data"],ModuleName ["Data","Dynamic"],ModuleName ["Data","Either"],ModuleName ["Data","Eq"],ModuleName ["Data","Fixed"],ModuleName ["Data","Foldable"],ModuleName ["Data","Function"],ModuleName ["Data","Functor"],ModuleName ["Data","IORef"],ModuleName ["Data","Int"],ModuleName ["Data","Ix"],ModuleName ["Data","List"],ModuleName ["Data","Maybe"],ModuleName ["Data","Monoid"],ModuleName ["Data","OldTypeable"],ModuleName ["Data","OldTypeable","Internal"],ModuleName ["Data","Ord"],ModuleName ["Data","Proxy"],ModuleName ["Data","Ratio"],ModuleName ["Data","STRef"],ModuleName ["Data","STRef","Lazy"],ModuleName ["Data","STRef","Strict"],ModuleName ["Data","String"],ModuleName ["Data","Traversable"],ModuleName ["Data","Tuple"],ModuleName ["Data","Type","Bool"],ModuleName ["Data","Type","Coercion"],ModuleName ["Data","Type","Equality"],ModuleName ["Data","Typeable"],ModuleName ["Data","Typeable","Internal"],ModuleName ["Data","Unique"],ModuleName ["Data","Version"],ModuleName ["Data","Word"],ModuleName ["Debug","Trace"],ModuleName ["Foreign"],ModuleName ["Foreign","C"],ModuleName ["Foreign","C","Error"],ModuleName ["Foreign","C","String"],ModuleName ["Foreign","C","Types"],ModuleName ["Foreign","Concurrent"],ModuleName ["Foreign","ForeignPtr"],ModuleName ["Foreign","ForeignPtr","Safe"],ModuleName ["Foreign","ForeignPtr","Unsafe"],ModuleName ["Foreign","Marshal"],ModuleName ["Foreign","Marshal","Alloc"],ModuleName ["Foreign","Marshal","Array"],ModuleName ["Foreign","Marshal","Error"],ModuleName ["Foreign","Marshal","Pool"],ModuleName ["Foreign","Marshal","Safe"],ModuleName ["Foreign","Marshal","Unsafe"],ModuleName ["Foreign","Marshal","Utils"],ModuleName ["Foreign","Ptr"],ModuleName ["Foreign","Safe"],ModuleName ["Foreign","StablePtr"],ModuleName ["Foreign","Storable"],ModuleName ["GHC","Arr"],ModuleName ["GHC","Base"],ModuleName ["GHC","Char"],ModuleName ["GHC","Conc"],ModuleName ["GHC","Conc","IO"],ModuleName ["GHC","Conc","Signal"],ModuleName ["GHC","Conc","Sync"],ModuleName ["GHC","ConsoleHandler"],ModuleName ["GHC","Constants"],ModuleName ["GHC","Desugar"],ModuleName ["GHC","Enum"],ModuleName ["GHC","Environment"],ModuleName ["GHC","Err"],ModuleName ["GHC","Exception"],ModuleName ["GHC","Exts"],ModuleName ["GHC","Fingerprint"],ModuleName ["GHC","Fingerprint","Type"],ModuleName ["GHC","Float"],ModuleName ["GHC","Float","ConversionUtils"],ModuleName ["GHC","Float","RealFracMethods"],ModuleName ["GHC","Foreign"],ModuleName ["GHC","ForeignPtr"],ModuleName ["GHC","GHCi"],ModuleName ["GHC","Generics"],ModuleName ["GHC","IO"],ModuleName ["GHC","IO","Buffer"],ModuleName ["GHC","IO","BufferedIO"],ModuleName ["GHC","IO","Device"],ModuleName ["GHC","IO","Encoding"],ModuleName ["GHC","IO","Encoding","CodePage"],ModuleName ["GHC","IO","Encoding","Failure"],ModuleName ["GHC","IO","Encoding","Iconv"],ModuleName ["GHC","IO","Encoding","Latin1"],ModuleName ["GHC","IO","Encoding","Types"],ModuleName ["GHC","IO","Encoding","UTF16"],ModuleName ["GHC","IO","Encoding","UTF32"],ModuleName ["GHC","IO","Encoding","UTF8"],ModuleName ["GHC","IO","Exception"],ModuleName ["GHC","IO","FD"],ModuleName ["GHC","IO","Handle"],ModuleName ["GHC","IO","Handle","FD"],ModuleName ["GHC","IO","Handle","Internals"],ModuleName ["GHC","IO","Handle","Text"],ModuleName ["GHC","IO","Handle","Types"],ModuleName ["GHC","IO","IOMode"],ModuleName ["GHC","IOArray"],ModuleName ["GHC","IORef"],ModuleName ["GHC","IP"],ModuleName ["GHC","Int"],ModuleName ["GHC","List"],ModuleName ["GHC","MVar"],ModuleName ["GHC","Num"],ModuleName ["GHC","PArr"],ModuleName ["GHC","Pack"],ModuleName ["GHC","Profiling"],ModuleName ["GHC","Ptr"],ModuleName ["GHC","Read"],ModuleName ["GHC","Real"],ModuleName ["GHC","ST"],ModuleName ["GHC","STRef"],ModuleName ["GHC","Show"],ModuleName ["GHC","Stable"],ModuleName ["GHC","Stack"],ModuleName ["GHC","Stats"],ModuleName ["GHC","Storable"],ModuleName ["GHC","TopHandler"],ModuleName ["GHC","TypeLits"],ModuleName ["GHC","Unicode"],ModuleName ["GHC","Weak"],ModuleName ["GHC","Word"],ModuleName ["Numeric"],ModuleName ["Prelude"],ModuleName ["System","CPUTime"],ModuleName ["System","Console","GetOpt"],ModuleName ["System","Environment"],ModuleName ["System","Exit"],ModuleName ["System","IO"],ModuleName ["System","IO","Error"],ModuleName ["System","IO","Unsafe"],ModuleName ["System","Info"],ModuleName ["System","Mem"],ModuleName ["System","Mem","StableName"],ModuleName ["System","Mem","Weak"],ModuleName ["System","Posix","Internals"],ModuleName ["System","Posix","Types"],ModuleName ["System","Timeout"],ModuleName ["Text","ParserCombinators","ReadP"],ModuleName ["Text","ParserCombinators","ReadPrec"],ModuleName ["Text","Printf"],ModuleName ["Text","Read"],ModuleName ["Text","Read","Lex"],ModuleName ["Text","Show"],ModuleName ["Text","Show","Functions"],ModuleName ["Unsafe","Coerce"],ModuleName ["GHC","Event"]], hiddenModules = [ModuleName ["Control","Monad","ST","Imp"],ModuleName ["Control","Monad","ST","Lazy","Imp"],ModuleName ["Foreign","ForeignPtr","Imp"],ModuleName ["System","Environment","ExecutablePath"],ModuleName ["GHC","Event","Arr"],ModuleName ["GHC","Event","Array"],ModuleName ["GHC","Event","Clock"],ModuleName ["GHC","Event","Control"],ModuleName ["GHC","Event","EPoll"],ModuleName ["GHC","Event","IntTable"],ModuleName ["GHC","Event","Internal"],ModuleName ["GHC","Event","KQueue"],ModuleName ["GHC","Event","Manager"],ModuleName ["GHC","Event","PSQ"],ModuleName ["GHC","Event","Poll"],ModuleName ["GHC","Event","Thread"],ModuleName ["GHC","Event","TimerManager"],ModuleName ["GHC","Event","Unique"]], trusted = False, importDirs = ["/usr/lib64/ghc-7.8.4/base-4.7.0.2"], libraryDirs = ["/usr/lib64/ghc-7.8.4/base-4.7.0.2"], hsLibraries = ["HSbase-4.7.0.2"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = ["/usr/lib64/ghc-7.8.4/base-4.7.0.2/include"], includes = ["HsBase.h"], depends = [InstalledPackageId "ghc-prim-0.3.1.0-a24f9c14c632d75b683d0f93283aea37",InstalledPackageId "integer-gmp-0.5.1.0-26579559b3647acf4f01d5edd9491a46",InstalledPackageId "builtin_rts"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/share/doc/ghc/html/libraries/base-4.7.0.2/base.haddock"], haddockHTMLs = ["/usr/share/doc/ghc/html/libraries/base-4.7.0.2"]}),(InstalledPackageId "builtin_rts",InstalledPackageInfo {installedPackageId = InstalledPackageId "builtin_rts", sourcePackageId = PackageIdentifier {pkgName = PackageName "rts", pkgVersion = Version {versionBranch = [1,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "glasgow-haskell-users@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "", description = "", category = "", exposed = True, exposedModules = [], hiddenModules = [], trusted = False, importDirs = [], libraryDirs = ["/usr/lib64/ghc-7.8.4/rts-1.0"], hsLibraries = ["HSrts"], extraLibraries = ["m","rt","dl","ffi"], extraGHCiLibraries = [], includeDirs = ["/usr/lib64/ghc-7.8.4/include"], includes = ["Stg.h"], depends = [], hugsOptions = [], ccOptions = [], ldOptions = ["-Wl,-u,ghczmprim_GHCziTypes_Izh_static_info","-Wl,-u,ghczmprim_GHCziTypes_Czh_static_info","-Wl,-u,ghczmprim_GHCziTypes_Fzh_static_info","-Wl,-u,ghczmprim_GHCziTypes_Dzh_static_info","-Wl,-u,base_GHCziPtr_Ptr_static_info","-Wl,-u,ghczmprim_GHCziTypes_Wzh_static_info","-Wl,-u,base_GHCziInt_I8zh_static_info","-Wl,-u,base_GHCziInt_I16zh_static_info","-Wl,-u,base_GHCziInt_I32zh_static_info","-Wl,-u,base_GHCziInt_I64zh_static_info","-Wl,-u,base_GHCziWord_W8zh_static_info","-Wl,-u,base_GHCziWord_W16zh_static_info","-Wl,-u,base_GHCziWord_W32zh_static_info","-Wl,-u,base_GHCziWord_W64zh_static_info","-Wl,-u,base_GHCziStable_StablePtr_static_info","-Wl,-u,ghczmprim_GHCziTypes_Izh_con_info","-Wl,-u,ghczmprim_GHCziTypes_Czh_con_info","-Wl,-u,ghczmprim_GHCziTypes_Fzh_con_info","-Wl,-u,ghczmprim_GHCziTypes_Dzh_con_info","-Wl,-u,base_GHCziPtr_Ptr_con_info","-Wl,-u,base_GHCziPtr_FunPtr_con_info","-Wl,-u,base_GHCziStable_StablePtr_con_info","-Wl,-u,ghczmprim_GHCziTypes_False_closure","-Wl,-u,ghczmprim_GHCziTypes_True_closure","-Wl,-u,base_GHCziPack_unpackCString_closure","-Wl,-u,base_GHCziIOziException_stackOverflow_closure","-Wl,-u,base_GHCziIOziException_heapOverflow_closure","-Wl,-u,base_ControlziExceptionziBase_nonTermination_closure","-Wl,-u,base_GHCziIOziException_blockedIndefinitelyOnMVar_closure","-Wl,-u,base_GHCziIOziException_blockedIndefinitelyOnSTM_closure","-Wl,-u,base_ControlziExceptionziBase_nestedAtomically_closure","-Wl,-u,base_GHCziWeak_runFinalizzerBatch_closure","-Wl,-u,base_GHCziTopHandler_flushStdHandles_closure","-Wl,-u,base_GHCziTopHandler_runIO_closure","-Wl,-u,base_GHCziTopHandler_runNonIO_closure","-Wl,-u,base_GHCziConcziIO_ensureIOManagerIsRunning_closure","-Wl,-u,base_GHCziConcziIO_ioManagerCapabilitiesChanged_closure","-Wl,-u,base_GHCziConcziSync_runSparks_closure","-Wl,-u,base_GHCziConcziSignal_runHandlersPtr_closure"], frameworkDirs = [], frameworks = [], haddockInterfaces = [], haddockHTMLs = []}),(InstalledPackageId "ghc-prim-0.3.1.0-a24f9c14c632d75b683d0f93283aea37",InstalledPackageInfo {installedPackageId = InstalledPackageId "ghc-prim-0.3.1.0-a24f9c14c632d75b683d0f93283aea37", sourcePackageId = PackageIdentifier {pkgName = PackageName "ghc-prim", pkgVersion = Version {versionBranch = [0,3,1,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "GHC primitives", description = "GHC primitives.", category = "GHC", exposed = True, exposedModules = [ModuleName ["GHC","CString"],ModuleName ["GHC","Classes"],ModuleName ["GHC","Debug"],ModuleName ["GHC","IntWord64"],ModuleName ["GHC","Magic"],ModuleName ["GHC","PrimopWrappers"],ModuleName ["GHC","Tuple"],ModuleName ["GHC","Types"],ModuleName ["GHC","Prim"]], hiddenModules = [], trusted = False, importDirs = ["/usr/lib64/ghc-7.8.4/ghc-prim-0.3.1.0"], libraryDirs = ["/usr/lib64/ghc-7.8.4/ghc-prim-0.3.1.0"], hsLibraries = ["HSghc-prim-0.3.1.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "builtin_rts"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/share/doc/ghc/html/libraries/ghc-prim-0.3.1.0/ghc-prim.haddock"], haddockHTMLs = ["/usr/share/doc/ghc/html/libraries/ghc-prim-0.3.1.0"]}),(InstalledPackageId "integer-gmp-0.5.1.0-26579559b3647acf4f01d5edd9491a46",InstalledPackageInfo {installedPackageId = InstalledPackageId "integer-gmp-0.5.1.0-26579559b3647acf4f01d5edd9491a46", sourcePackageId = PackageIdentifier {pkgName = PackageName "integer-gmp", pkgVersion = Version {versionBranch = [0,5,1,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "Integer library based on GMP", description = "This package provides the low-level implementation of the standard\n'Integer' type based on the\n<http://gmplib.org/ GNU Multiple Precision Arithmetic Library (GMP)>.\n\nThis package provides access to the internal representation of\n'Integer' as well as primitive operations with no proper error\nhandling, and should only be used directly with the utmost care.\n\nFor more details about the design of @integer-gmp@, see\n<https://ghc.haskell.org/trac/ghc/wiki/Commentary/Libraries/Integer GHC Commentary: Libraries/Integer>.", category = "Numerical", exposed = True, exposedModules = [ModuleName ["GHC","Integer"],ModuleName ["GHC","Integer","GMP","Internals"],ModuleName ["GHC","Integer","GMP","Prim"],ModuleName ["GHC","Integer","Logarithms"],ModuleName ["GHC","Integer","Logarithms","Internals"]], hiddenModules = [ModuleName ["GHC","Integer","Type"]], trusted = False, importDirs = ["/usr/lib64/ghc-7.8.4/integer-gmp-0.5.1.0"], libraryDirs = ["/usr/lib64/ghc-7.8.4/integer-gmp-0.5.1.0"], hsLibraries = ["HSinteger-gmp-0.5.1.0"], extraLibraries = ["gmp"], extraGHCiLibraries = [], includeDirs = ["/usr/lib64/ghc-7.8.4/integer-gmp-0.5.1.0/include"], includes = [], depends = [InstalledPackageId "ghc-prim-0.3.1.0-a24f9c14c632d75b683d0f93283aea37"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/share/doc/ghc/html/libraries/integer-gmp-0.5.1.0/integer-gmp.haddock"], haddockHTMLs = ["/usr/share/doc/ghc/html/libraries/integer-gmp-0.5.1.0"]}),(InstalledPackageId "split-0.2.3-794204cf751e1aafa9732748edd57a6e",InstalledPackageInfo {installedPackageId = InstalledPackageId "split-0.2.3-794204cf751e1aafa9732748edd57a6e", sourcePackageId = PackageIdentifier {pkgName = PackageName "split", pkgVersion = Version {versionBranch = [0,2,3], versionTags = []}}, license = BSD3, copyright = "(c) Brent Yorgey, Louis Wasserman 2008-2012", maintainer = "byorgey@gmail.com", author = "Brent Yorgey", stability = "stable", homepage = "", pkgUrl = "", synopsis = "Combinator library for splitting lists.", description = "A collection of various methods for splitting\nlists into parts, akin to the \\\"split\\\" function\nfound in several mainstream languages. Here is\nits tale:\n\nOnce upon a time the standard \"Data.List\" module\nheld no function for splitting a list into parts\naccording to a delimiter.  Many a brave\nlambda-knight strove to add such a function, but\ntheir striving was in vain, for Lo, the Supreme\nCouncil fell to bickering amongst themselves what\nwas to be the essential nature of the One True\nFunction which could cleave a list in twain (or\nthrain, or any required number of parts).\n\nAnd thus came to pass the split package,\ncomprising divers functions for splitting a list\nasunder, each according to its nature.  And the\nSupreme Council had no longer any grounds for\nargument, for the favored method of each was\ncontained therein.\n\nTo get started, see the \"Data.List.Split\" module.", category = "List", exposed = True, exposedModules = [ModuleName ["Data","List","Split"],ModuleName ["Data","List","Split","Internals"]], hiddenModules = [], trusted = False, importDirs = ["/home/jharjanto/.cabal/lib/x86_64-linux-ghc-7.8.4/split-0.2.3"], libraryDirs = ["/home/jharjanto/.cabal/lib/x86_64-linux-ghc-7.8.4/split-0.2.3"], hsLibraries = ["HSsplit-0.2.3"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.7.0.2-cb23b5265b6e147094c0cd9ac819acb1"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/jharjanto/.cabal/share/doc/x86_64-linux-ghc-7.8.4/split-0.2.3/html/split.haddock"], haddockHTMLs = ["/home/jharjanto/.cabal/share/doc/x86_64-linux-ghc-7.8.4/split-0.2.3/html"]})]) (fromList [(PackageName "base",fromList [(Version {versionBranch = [4,7,0,2], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "base-4.7.0.2-cb23b5265b6e147094c0cd9ac819acb1", sourcePackageId = PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,7,0,2], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "Basic libraries", description = "This package contains the \"Prelude\" and its support libraries,\nand a large collection of useful libraries ranging from data\nstructures to parsing combinators and debugging utilities.", category = "Prelude", exposed = True, exposedModules = [ModuleName ["Control","Applicative"],ModuleName ["Control","Arrow"],ModuleName ["Control","Category"],ModuleName ["Control","Concurrent"],ModuleName ["Control","Concurrent","Chan"],ModuleName ["Control","Concurrent","MVar"],ModuleName ["Control","Concurrent","QSem"],ModuleName ["Control","Concurrent","QSemN"],ModuleName ["Control","Exception"],ModuleName ["Control","Exception","Base"],ModuleName ["Control","Monad"],ModuleName ["Control","Monad","Fix"],ModuleName ["Control","Monad","Instances"],ModuleName ["Control","Monad","ST"],ModuleName ["Control","Monad","ST","Lazy"],ModuleName ["Control","Monad","ST","Lazy","Safe"],ModuleName ["Control","Monad","ST","Lazy","Unsafe"],ModuleName ["Control","Monad","ST","Safe"],ModuleName ["Control","Monad","ST","Strict"],ModuleName ["Control","Monad","ST","Unsafe"],ModuleName ["Control","Monad","Zip"],ModuleName ["Data","Bits"],ModuleName ["Data","Bool"],ModuleName ["Data","Char"],ModuleName ["Data","Coerce"],ModuleName ["Data","Complex"],ModuleName ["Data","Data"],ModuleName ["Data","Dynamic"],ModuleName ["Data","Either"],ModuleName ["Data","Eq"],ModuleName ["Data","Fixed"],ModuleName ["Data","Foldable"],ModuleName ["Data","Function"],ModuleName ["Data","Functor"],ModuleName ["Data","IORef"],ModuleName ["Data","Int"],ModuleName ["Data","Ix"],ModuleName ["Data","List"],ModuleName ["Data","Maybe"],ModuleName ["Data","Monoid"],ModuleName ["Data","OldTypeable"],ModuleName ["Data","OldTypeable","Internal"],ModuleName ["Data","Ord"],ModuleName ["Data","Proxy"],ModuleName ["Data","Ratio"],ModuleName ["Data","STRef"],ModuleName ["Data","STRef","Lazy"],ModuleName ["Data","STRef","Strict"],ModuleName ["Data","String"],ModuleName ["Data","Traversable"],ModuleName ["Data","Tuple"],ModuleName ["Data","Type","Bool"],ModuleName ["Data","Type","Coercion"],ModuleName ["Data","Type","Equality"],ModuleName ["Data","Typeable"],ModuleName ["Data","Typeable","Internal"],ModuleName ["Data","Unique"],ModuleName ["Data","Version"],ModuleName ["Data","Word"],ModuleName ["Debug","Trace"],ModuleName ["Foreign"],ModuleName ["Foreign","C"],ModuleName ["Foreign","C","Error"],ModuleName ["Foreign","C","String"],ModuleName ["Foreign","C","Types"],ModuleName ["Foreign","Concurrent"],ModuleName ["Foreign","ForeignPtr"],ModuleName ["Foreign","ForeignPtr","Safe"],ModuleName ["Foreign","ForeignPtr","Unsafe"],ModuleName ["Foreign","Marshal"],ModuleName ["Foreign","Marshal","Alloc"],ModuleName ["Foreign","Marshal","Array"],ModuleName ["Foreign","Marshal","Error"],ModuleName ["Foreign","Marshal","Pool"],ModuleName ["Foreign","Marshal","Safe"],ModuleName ["Foreign","Marshal","Unsafe"],ModuleName ["Foreign","Marshal","Utils"],ModuleName ["Foreign","Ptr"],ModuleName ["Foreign","Safe"],ModuleName ["Foreign","StablePtr"],ModuleName ["Foreign","Storable"],ModuleName ["GHC","Arr"],ModuleName ["GHC","Base"],ModuleName ["GHC","Char"],ModuleName ["GHC","Conc"],ModuleName ["GHC","Conc","IO"],ModuleName ["GHC","Conc","Signal"],ModuleName ["GHC","Conc","Sync"],ModuleName ["GHC","ConsoleHandler"],ModuleName ["GHC","Constants"],ModuleName ["GHC","Desugar"],ModuleName ["GHC","Enum"],ModuleName ["GHC","Environment"],ModuleName ["GHC","Err"],ModuleName ["GHC","Exception"],ModuleName ["GHC","Exts"],ModuleName ["GHC","Fingerprint"],ModuleName ["GHC","Fingerprint","Type"],ModuleName ["GHC","Float"],ModuleName ["GHC","Float","ConversionUtils"],ModuleName ["GHC","Float","RealFracMethods"],ModuleName ["GHC","Foreign"],ModuleName ["GHC","ForeignPtr"],ModuleName ["GHC","GHCi"],ModuleName ["GHC","Generics"],ModuleName ["GHC","IO"],ModuleName ["GHC","IO","Buffer"],ModuleName ["GHC","IO","BufferedIO"],ModuleName ["GHC","IO","Device"],ModuleName ["GHC","IO","Encoding"],ModuleName ["GHC","IO","Encoding","CodePage"],ModuleName ["GHC","IO","Encoding","Failure"],ModuleName ["GHC","IO","Encoding","Iconv"],ModuleName ["GHC","IO","Encoding","Latin1"],ModuleName ["GHC","IO","Encoding","Types"],ModuleName ["GHC","IO","Encoding","UTF16"],ModuleName ["GHC","IO","Encoding","UTF32"],ModuleName ["GHC","IO","Encoding","UTF8"],ModuleName ["GHC","IO","Exception"],ModuleName ["GHC","IO","FD"],ModuleName ["GHC","IO","Handle"],ModuleName ["GHC","IO","Handle","FD"],ModuleName ["GHC","IO","Handle","Internals"],ModuleName ["GHC","IO","Handle","Text"],ModuleName ["GHC","IO","Handle","Types"],ModuleName ["GHC","IO","IOMode"],ModuleName ["GHC","IOArray"],ModuleName ["GHC","IORef"],ModuleName ["GHC","IP"],ModuleName ["GHC","Int"],ModuleName ["GHC","List"],ModuleName ["GHC","MVar"],ModuleName ["GHC","Num"],ModuleName ["GHC","PArr"],ModuleName ["GHC","Pack"],ModuleName ["GHC","Profiling"],ModuleName ["GHC","Ptr"],ModuleName ["GHC","Read"],ModuleName ["GHC","Real"],ModuleName ["GHC","ST"],ModuleName ["GHC","STRef"],ModuleName ["GHC","Show"],ModuleName ["GHC","Stable"],ModuleName ["GHC","Stack"],ModuleName ["GHC","Stats"],ModuleName ["GHC","Storable"],ModuleName ["GHC","TopHandler"],ModuleName ["GHC","TypeLits"],ModuleName ["GHC","Unicode"],ModuleName ["GHC","Weak"],ModuleName ["GHC","Word"],ModuleName ["Numeric"],ModuleName ["Prelude"],ModuleName ["System","CPUTime"],ModuleName ["System","Console","GetOpt"],ModuleName ["System","Environment"],ModuleName ["System","Exit"],ModuleName ["System","IO"],ModuleName ["System","IO","Error"],ModuleName ["System","IO","Unsafe"],ModuleName ["System","Info"],ModuleName ["System","Mem"],ModuleName ["System","Mem","StableName"],ModuleName ["System","Mem","Weak"],ModuleName ["System","Posix","Internals"],ModuleName ["System","Posix","Types"],ModuleName ["System","Timeout"],ModuleName ["Text","ParserCombinators","ReadP"],ModuleName ["Text","ParserCombinators","ReadPrec"],ModuleName ["Text","Printf"],ModuleName ["Text","Read"],ModuleName ["Text","Read","Lex"],ModuleName ["Text","Show"],ModuleName ["Text","Show","Functions"],ModuleName ["Unsafe","Coerce"],ModuleName ["GHC","Event"]], hiddenModules = [ModuleName ["Control","Monad","ST","Imp"],ModuleName ["Control","Monad","ST","Lazy","Imp"],ModuleName ["Foreign","ForeignPtr","Imp"],ModuleName ["System","Environment","ExecutablePath"],ModuleName ["GHC","Event","Arr"],ModuleName ["GHC","Event","Array"],ModuleName ["GHC","Event","Clock"],ModuleName ["GHC","Event","Control"],ModuleName ["GHC","Event","EPoll"],ModuleName ["GHC","Event","IntTable"],ModuleName ["GHC","Event","Internal"],ModuleName ["GHC","Event","KQueue"],ModuleName ["GHC","Event","Manager"],ModuleName ["GHC","Event","PSQ"],ModuleName ["GHC","Event","Poll"],ModuleName ["GHC","Event","Thread"],ModuleName ["GHC","Event","TimerManager"],ModuleName ["GHC","Event","Unique"]], trusted = False, importDirs = ["/usr/lib64/ghc-7.8.4/base-4.7.0.2"], libraryDirs = ["/usr/lib64/ghc-7.8.4/base-4.7.0.2"], hsLibraries = ["HSbase-4.7.0.2"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = ["/usr/lib64/ghc-7.8.4/base-4.7.0.2/include"], includes = ["HsBase.h"], depends = [InstalledPackageId "ghc-prim-0.3.1.0-a24f9c14c632d75b683d0f93283aea37",InstalledPackageId "integer-gmp-0.5.1.0-26579559b3647acf4f01d5edd9491a46",InstalledPackageId "builtin_rts"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/share/doc/ghc/html/libraries/base-4.7.0.2/base.haddock"], haddockHTMLs = ["/usr/share/doc/ghc/html/libraries/base-4.7.0.2"]}])]),(PackageName "ghc-prim",fromList [(Version {versionBranch = [0,3,1,0], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "ghc-prim-0.3.1.0-a24f9c14c632d75b683d0f93283aea37", sourcePackageId = PackageIdentifier {pkgName = PackageName "ghc-prim", pkgVersion = Version {versionBranch = [0,3,1,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "GHC primitives", description = "GHC primitives.", category = "GHC", exposed = True, exposedModules = [ModuleName ["GHC","CString"],ModuleName ["GHC","Classes"],ModuleName ["GHC","Debug"],ModuleName ["GHC","IntWord64"],ModuleName ["GHC","Magic"],ModuleName ["GHC","PrimopWrappers"],ModuleName ["GHC","Tuple"],ModuleName ["GHC","Types"],ModuleName ["GHC","Prim"]], hiddenModules = [], trusted = False, importDirs = ["/usr/lib64/ghc-7.8.4/ghc-prim-0.3.1.0"], libraryDirs = ["/usr/lib64/ghc-7.8.4/ghc-prim-0.3.1.0"], hsLibraries = ["HSghc-prim-0.3.1.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "builtin_rts"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/share/doc/ghc/html/libraries/ghc-prim-0.3.1.0/ghc-prim.haddock"], haddockHTMLs = ["/usr/share/doc/ghc/html/libraries/ghc-prim-0.3.1.0"]}])]),(PackageName "integer-gmp",fromList [(Version {versionBranch = [0,5,1,0], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "integer-gmp-0.5.1.0-26579559b3647acf4f01d5edd9491a46", sourcePackageId = PackageIdentifier {pkgName = PackageName "integer-gmp", pkgVersion = Version {versionBranch = [0,5,1,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "Integer library based on GMP", description = "This package provides the low-level implementation of the standard\n'Integer' type based on the\n<http://gmplib.org/ GNU Multiple Precision Arithmetic Library (GMP)>.\n\nThis package provides access to the internal representation of\n'Integer' as well as primitive operations with no proper error\nhandling, and should only be used directly with the utmost care.\n\nFor more details about the design of @integer-gmp@, see\n<https://ghc.haskell.org/trac/ghc/wiki/Commentary/Libraries/Integer GHC Commentary: Libraries/Integer>.", category = "Numerical", exposed = True, exposedModules = [ModuleName ["GHC","Integer"],ModuleName ["GHC","Integer","GMP","Internals"],ModuleName ["GHC","Integer","GMP","Prim"],ModuleName ["GHC","Integer","Logarithms"],ModuleName ["GHC","Integer","Logarithms","Internals"]], hiddenModules = [ModuleName ["GHC","Integer","Type"]], trusted = False, importDirs = ["/usr/lib64/ghc-7.8.4/integer-gmp-0.5.1.0"], libraryDirs = ["/usr/lib64/ghc-7.8.4/integer-gmp-0.5.1.0"], hsLibraries = ["HSinteger-gmp-0.5.1.0"], extraLibraries = ["gmp"], extraGHCiLibraries = [], includeDirs = ["/usr/lib64/ghc-7.8.4/integer-gmp-0.5.1.0/include"], includes = [], depends = [InstalledPackageId "ghc-prim-0.3.1.0-a24f9c14c632d75b683d0f93283aea37"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/share/doc/ghc/html/libraries/integer-gmp-0.5.1.0/integer-gmp.haddock"], haddockHTMLs = ["/usr/share/doc/ghc/html/libraries/integer-gmp-0.5.1.0"]}])]),(PackageName "rts",fromList [(Version {versionBranch = [1,0], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "builtin_rts", sourcePackageId = PackageIdentifier {pkgName = PackageName "rts", pkgVersion = Version {versionBranch = [1,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "glasgow-haskell-users@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "", description = "", category = "", exposed = True, exposedModules = [], hiddenModules = [], trusted = False, importDirs = [], libraryDirs = ["/usr/lib64/ghc-7.8.4/rts-1.0"], hsLibraries = ["HSrts"], extraLibraries = ["m","rt","dl","ffi"], extraGHCiLibraries = [], includeDirs = ["/usr/lib64/ghc-7.8.4/include"], includes = ["Stg.h"], depends = [], hugsOptions = [], ccOptions = [], ldOptions = ["-Wl,-u,ghczmprim_GHCziTypes_Izh_static_info","-Wl,-u,ghczmprim_GHCziTypes_Czh_static_info","-Wl,-u,ghczmprim_GHCziTypes_Fzh_static_info","-Wl,-u,ghczmprim_GHCziTypes_Dzh_static_info","-Wl,-u,base_GHCziPtr_Ptr_static_info","-Wl,-u,ghczmprim_GHCziTypes_Wzh_static_info","-Wl,-u,base_GHCziInt_I8zh_static_info","-Wl,-u,base_GHCziInt_I16zh_static_info","-Wl,-u,base_GHCziInt_I32zh_static_info","-Wl,-u,base_GHCziInt_I64zh_static_info","-Wl,-u,base_GHCziWord_W8zh_static_info","-Wl,-u,base_GHCziWord_W16zh_static_info","-Wl,-u,base_GHCziWord_W32zh_static_info","-Wl,-u,base_GHCziWord_W64zh_static_info","-Wl,-u,base_GHCziStable_StablePtr_static_info","-Wl,-u,ghczmprim_GHCziTypes_Izh_con_info","-Wl,-u,ghczmprim_GHCziTypes_Czh_con_info","-Wl,-u,ghczmprim_GHCziTypes_Fzh_con_info","-Wl,-u,ghczmprim_GHCziTypes_Dzh_con_info","-Wl,-u,base_GHCziPtr_Ptr_con_info","-Wl,-u,base_GHCziPtr_FunPtr_con_info","-Wl,-u,base_GHCziStable_StablePtr_con_info","-Wl,-u,ghczmprim_GHCziTypes_False_closure","-Wl,-u,ghczmprim_GHCziTypes_True_closure","-Wl,-u,base_GHCziPack_unpackCString_closure","-Wl,-u,base_GHCziIOziException_stackOverflow_closure","-Wl,-u,base_GHCziIOziException_heapOverflow_closure","-Wl,-u,base_ControlziExceptionziBase_nonTermination_closure","-Wl,-u,base_GHCziIOziException_blockedIndefinitelyOnMVar_closure","-Wl,-u,base_GHCziIOziException_blockedIndefinitelyOnSTM_closure","-Wl,-u,base_ControlziExceptionziBase_nestedAtomically_closure","-Wl,-u,base_GHCziWeak_runFinalizzerBatch_closure","-Wl,-u,base_GHCziTopHandler_flushStdHandles_closure","-Wl,-u,base_GHCziTopHandler_runIO_closure","-Wl,-u,base_GHCziTopHandler_runNonIO_closure","-Wl,-u,base_GHCziConcziIO_ensureIOManagerIsRunning_closure","-Wl,-u,base_GHCziConcziIO_ioManagerCapabilitiesChanged_closure","-Wl,-u,base_GHCziConcziSync_runSparks_closure","-Wl,-u,base_GHCziConcziSignal_runHandlersPtr_closure"], frameworkDirs = [], frameworks = [], haddockInterfaces = [], haddockHTMLs = []}])]),(PackageName "split",fromList [(Version {versionBranch = [0,2,3], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "split-0.2.3-794204cf751e1aafa9732748edd57a6e", sourcePackageId = PackageIdentifier {pkgName = PackageName "split", pkgVersion = Version {versionBranch = [0,2,3], versionTags = []}}, license = BSD3, copyright = "(c) Brent Yorgey, Louis Wasserman 2008-2012", maintainer = "byorgey@gmail.com", author = "Brent Yorgey", stability = "stable", homepage = "", pkgUrl = "", synopsis = "Combinator library for splitting lists.", description = "A collection of various methods for splitting\nlists into parts, akin to the \\\"split\\\" function\nfound in several mainstream languages. Here is\nits tale:\n\nOnce upon a time the standard \"Data.List\" module\nheld no function for splitting a list into parts\naccording to a delimiter.  Many a brave\nlambda-knight strove to add such a function, but\ntheir striving was in vain, for Lo, the Supreme\nCouncil fell to bickering amongst themselves what\nwas to be the essential nature of the One True\nFunction which could cleave a list in twain (or\nthrain, or any required number of parts).\n\nAnd thus came to pass the split package,\ncomprising divers functions for splitting a list\nasunder, each according to its nature.  And the\nSupreme Council had no longer any grounds for\nargument, for the favored method of each was\ncontained therein.\n\nTo get started, see the \"Data.List.Split\" module.", category = "List", exposed = True, exposedModules = [ModuleName ["Data","List","Split"],ModuleName ["Data","List","Split","Internals"]], hiddenModules = [], trusted = False, importDirs = ["/home/jharjanto/.cabal/lib/x86_64-linux-ghc-7.8.4/split-0.2.3"], libraryDirs = ["/home/jharjanto/.cabal/lib/x86_64-linux-ghc-7.8.4/split-0.2.3"], hsLibraries = ["HSsplit-0.2.3"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.7.0.2-cb23b5265b6e147094c0cd9ac819acb1"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/jharjanto/.cabal/share/doc/x86_64-linux-ghc-7.8.4/split-0.2.3/html/split.haddock"], haddockHTMLs = ["/home/jharjanto/.cabal/share/doc/x86_64-linux-ghc-7.8.4/split-0.2.3/html"]}])])]), pkgDescrFile = Just "./HaskellPlayground.cabal", localPkgDescr = PackageDescription {package = PackageIdentifier {pkgName = PackageName "HaskellPlayground", pkgVersion = Version {versionBranch = [0,1,0,0], versionTags = []}}, license = BSD3, licenseFile = "LICENSE", copyright = "2016 Author Here", maintainer = "example@example.com", author = "Author name here", stability = "", testedWith = [], homepage = "http://github.com/githubuser/HaskellPlayground#readme", pkgUrl = "", bugReports = "", sourceRepos = [SourceRepo {repoKind = RepoHead, repoType = Just Git, repoLocation = Just "https://github.com/githubuser/HaskellPlayground", repoModule = Nothing, repoBranch = Nothing, repoTag = Nothing, repoSubdir = Nothing}], synopsis = "Initial project template from stack", description = "Please see README.md", category = "Web", customFieldsPD = [], buildDepends = [Dependency (PackageName "HaskellPlayground") AnyVersion,Dependency (PackageName "base") (IntersectVersionRanges (IntersectVersionRanges (IntersectVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [4,7], versionTags = []})) (LaterVersion (Version {versionBranch = [4,7], versionTags = []}))) (EarlierVersion (Version {versionBranch = [5], versionTags = []}))) (ThisVersion (Version {versionBranch = [4,7,0,2], versionTags = []}))) (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [4,7,0,2], versionTags = []})))),Dependency (PackageName "split") (IntersectVersionRanges (IntersectVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [0,2,2], versionTags = []})) (LaterVersion (Version {versionBranch = [0,2,2], versionTags = []}))) (ThisVersion (Version {versionBranch = [0,2,3], versionTags = []}))) (IntersectVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [0,2,2], versionTags = []})) (LaterVersion (Version {versionBranch = [0,2,2], versionTags = []}))) (ThisVersion (Version {versionBranch = [0,2,3], versionTags = []}))))], specVersionRaw = Right (UnionVersionRanges (ThisVersion (Version {versionBranch = [1,10], versionTags = []})) (LaterVersion (Version {versionBranch = [1,10], versionTags = []}))), buildType = Just Simple, library = Just (Library {exposedModules = [ModuleName ["Lib"]], libExposed = True, libBuildInfo = BuildInfo {buildable = True, buildTools = [], cppOptions = [], ccOptions = [], ldOptions = [], pkgconfigDepends = [], frameworks = [], cSources = [], hsSourceDirs = ["src"], otherModules = [], defaultLanguage = Just Haskell2010, otherLanguages = [], defaultExtensions = [], otherExtensions = [], oldExtensions = [], extraLibs = [], extraLibDirs = [], includeDirs = [], includes = [], installIncludes = [], options = [], ghcProfOptions = [], ghcSharedOptions = [], customFieldsBI = [], targetBuildDepends = [Dependency (PackageName "base") (IntersectVersionRanges (IntersectVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [4,7], versionTags = []})) (LaterVersion (Version {versionBranch = [4,7], versionTags = []}))) (EarlierVersion (Version {versionBranch = [5], versionTags = []}))) (ThisVersion (Version {versionBranch = [4,7,0,2], versionTags = []}))),Dependency (PackageName "split") (IntersectVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [0,2,2], versionTags = []})) (LaterVersion (Version {versionBranch = [0,2,2], versionTags = []}))) (ThisVersion (Version {versionBranch = [0,2,3], versionTags = []})))]}}), executables = [Executable {exeName = "HaskellPlayground-exe", modulePath = "Main.hs", buildInfo = BuildInfo {buildable = True, buildTools = [], cppOptions = [], ccOptions = [], ldOptions = [], pkgconfigDepends = [], frameworks = [], cSources = [], hsSourceDirs = ["app"], otherModules = [], defaultLanguage = Just Haskell2010, otherLanguages = [], defaultExtensions = [], otherExtensions = [], oldExtensions = [], extraLibs = [], extraLibDirs = [], includeDirs = [], includes = [], installIncludes = [], options = [(GHC,["-threaded","-rtsopts","-with-rtsopts=-N"])], ghcProfOptions = [], ghcSharedOptions = [], customFieldsBI = [], targetBuildDepends = [Dependency (PackageName "HaskellPlayground") AnyVersion,Dependency (PackageName "base") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [4,7,0,2], versionTags = []}))),Dependency (PackageName "split") (IntersectVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [0,2,2], versionTags = []})) (LaterVersion (Version {versionBranch = [0,2,2], versionTags = []}))) (ThisVersion (Version {versionBranch = [0,2,3], versionTags = []})))]}}], testSuites = [TestSuite {testName = "HaskellPlayground-test", testInterface = TestSuiteExeV10 (Version {versionBranch = [1,0], versionTags = []}) "Spec.hs", testBuildInfo = BuildInfo {buildable = True, buildTools = [], cppOptions = [], ccOptions = [], ldOptions = [], pkgconfigDepends = [], frameworks = [], cSources = [], hsSourceDirs = ["test"], otherModules = [], defaultLanguage = Just Haskell2010, otherLanguages = [], defaultExtensions = [], otherExtensions = [], oldExtensions = [], extraLibs = [], extraLibDirs = [], includeDirs = [], includes = [], installIncludes = [], options = [(GHC,["-threaded","-rtsopts","-with-rtsopts=-N"])], ghcProfOptions = [], ghcSharedOptions = [], customFieldsBI = [], targetBuildDepends = [Dependency (PackageName "HaskellPlayground") AnyVersion,Dependency (PackageName "base") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [4,7,0,2], versionTags = []})))]}, testEnabled = False}], benchmarks = [], dataFiles = [], dataDir = "", extraSrcFiles = [], extraTmpFiles = [], extraDocFiles = []}, withPrograms = [("ar",ConfiguredProgram {programId = "ar", programVersion = Nothing, programDefaultArgs = [], programOverrideArgs = [], programOverrideEnv = [("PATH",Just "/home/jharjanto/.cabal/bin:/home/jharjanto/.cabal/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/home/jharjanto/.cabal/bin:/home/jharjanto/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/home/jharjanto/.cabal/bin:/home/jharjanto/bin:/home/jharjanto/.cabal/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/home/jharjanto/.cabal/bin:/home/jharjanto/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/home/jharjanto/.cabal/bin:/home/jharjanto/.cabal/bin")], programLocation = FoundOnSystem {locationPath = "/usr/bin/ar"}}),("cpphs",ConfiguredProgram {programId = "cpphs", programVersion = Just (Version {versionBranch = [1,20,1], versionTags = []}), programDefaultArgs = [], programOverrideArgs = [], programOverrideEnv = [("PATH",Just "/home/jharjanto/.cabal/bin:/home/jharjanto/.cabal/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/home/jharjanto/.cabal/bin:/home/jharjanto/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/home/jharjanto/.cabal/bin:/home/jharjanto/bin:/home/jharjanto/.cabal/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/home/jharjanto/.cabal/bin:/home/jharjanto/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/home/jharjanto/.cabal/bin:/home/jharjanto/.cabal/bin")], programLocation = FoundOnSystem {locationPath = "/home/jharjanto/.cabal/bin/cpphs"}}),("gcc",ConfiguredProgram {programId = "gcc", programVersion = Just (Version {versionBranch = [5,3,1], versionTags = []}), programDefaultArgs = [], programOverrideArgs = [], programOverrideEnv = [("PATH",Just "/home/jharjanto/.cabal/bin:/home/jharjanto/.cabal/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/home/jharjanto/.cabal/bin:/home/jharjanto/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/home/jharjanto/.cabal/bin:/home/jharjanto/bin:/home/jharjanto/.cabal/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/home/jharjanto/.cabal/bin:/home/jharjanto/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/home/jharjanto/.cabal/bin:/home/jharjanto/.cabal/bin")], programLocation = FoundOnSystem {locationPath = "/usr/bin/gcc"}}),("ghc",ConfiguredProgram {programId = "ghc", programVersion = Just (Version {versionBranch = [7,8,4], versionTags = []}), programDefaultArgs = [], programOverrideArgs = [], programOverrideEnv = [("PATH",Just "/home/jharjanto/.cabal/bin:/home/jharjanto/.cabal/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/home/jharjanto/.cabal/bin:/home/jharjanto/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/home/jharjanto/.cabal/bin:/home/jharjanto/bin:/home/jharjanto/.cabal/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/home/jharjanto/.cabal/bin:/home/jharjanto/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/home/jharjanto/.cabal/bin:/home/jharjanto/.cabal/bin")], programLocation = UserSpecified {locationPath = "/usr/bin/ghc"}}),("ghc-pkg",ConfiguredProgram {programId = "ghc-pkg", programVersion = Just (Version {versionBranch = [7,8,4], versionTags = []}), programDefaultArgs = [], programOverrideArgs = [], programOverrideEnv = [("PATH",Just "/home/jharjanto/.cabal/bin:/home/jharjanto/.cabal/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/home/jharjanto/.cabal/bin:/home/jharjanto/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/home/jharjanto/.cabal/bin:/home/jharjanto/bin:/home/jharjanto/.cabal/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/home/jharjanto/.cabal/bin:/home/jharjanto/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/home/jharjanto/.cabal/bin:/home/jharjanto/.cabal/bin")], programLocation = FoundOnSystem {locationPath = "/usr/bin/ghc-pkg"}}),("haddock",ConfiguredProgram {programId = "haddock", programVersion = Just (Version {versionBranch = [2,14,3], versionTags = []}), programDefaultArgs = [], programOverrideArgs = [], programOverrideEnv = [("PATH",Just "/home/jharjanto/.cabal/bin:/home/jharjanto/.cabal/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/home/jharjanto/.cabal/bin:/home/jharjanto/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/home/jharjanto/.cabal/bin:/home/jharjanto/bin:/home/jharjanto/.cabal/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/home/jharjanto/.cabal/bin:/home/jharjanto/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/home/jharjanto/.cabal/bin:/home/jharjanto/.cabal/bin")], programLocation = FoundOnSystem {locationPath = "/usr/bin/haddock"}}),("happy",ConfiguredProgram {programId = "happy", programVersion = Just (Version {versionBranch = [1,19,5], versionTags = []}), programDefaultArgs = [], programOverrideArgs = [], programOverrideEnv = [("PATH",Just "/home/jharjanto/.cabal/bin:/home/jharjanto/.cabal/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/home/jharjanto/.cabal/bin:/home/jharjanto/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/home/jharjanto/.cabal/bin:/home/jharjanto/bin:/home/jharjanto/.cabal/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/home/jharjanto/.cabal/bin:/home/jharjanto/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/home/jharjanto/.cabal/bin:/home/jharjanto/.cabal/bin")], programLocation = FoundOnSystem {locationPath = "/home/jharjanto/.cabal/bin/happy"}}),("hpc",ConfiguredProgram {programId = "hpc", programVersion = Just (Version {versionBranch = [0,67], versionTags = []}), programDefaultArgs = [], programOverrideArgs = [], programOverrideEnv = [("PATH",Just "/home/jharjanto/.cabal/bin:/home/jharjanto/.cabal/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/home/jharjanto/.cabal/bin:/home/jharjanto/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/home/jharjanto/.cabal/bin:/home/jharjanto/bin:/home/jharjanto/.cabal/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/home/jharjanto/.cabal/bin:/home/jharjanto/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/home/jharjanto/.cabal/bin:/home/jharjanto/.cabal/bin")], programLocation = FoundOnSystem {locationPath = "/usr/bin/hpc"}}),("hsc2hs",ConfiguredProgram {programId = "hsc2hs", programVersion = Just (Version {versionBranch = [0,67], versionTags = []}), programDefaultArgs = [], programOverrideArgs = [], programOverrideEnv = [("PATH",Just "/home/jharjanto/.cabal/bin:/home/jharjanto/.cabal/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/home/jharjanto/.cabal/bin:/home/jharjanto/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/home/jharjanto/.cabal/bin:/home/jharjanto/bin:/home/jharjanto/.cabal/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/home/jharjanto/.cabal/bin:/home/jharjanto/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/home/jharjanto/.cabal/bin:/home/jharjanto/.cabal/bin")], programLocation = FoundOnSystem {locationPath = "/usr/bin/hsc2hs"}}),("hscolour",ConfiguredProgram {programId = "hscolour", programVersion = Just (Version {versionBranch = [1,24], versionTags = []}), programDefaultArgs = [], programOverrideArgs = [], programOverrideEnv = [("PATH",Just "/home/jharjanto/.cabal/bin:/home/jharjanto/.cabal/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/home/jharjanto/.cabal/bin:/home/jharjanto/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/home/jharjanto/.cabal/bin:/home/jharjanto/bin:/home/jharjanto/.cabal/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/home/jharjanto/.cabal/bin:/home/jharjanto/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/home/jharjanto/.cabal/bin:/home/jharjanto/.cabal/bin")], programLocation = FoundOnSystem {locationPath = "/home/jharjanto/.cabal/bin/HsColour"}}),("ld",ConfiguredProgram {programId = "ld", programVersion = Nothing, programDefaultArgs = ["-x"], programOverrideArgs = [], programOverrideEnv = [("PATH",Just "/home/jharjanto/.cabal/bin:/home/jharjanto/.cabal/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/home/jharjanto/.cabal/bin:/home/jharjanto/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/home/jharjanto/.cabal/bin:/home/jharjanto/bin:/home/jharjanto/.cabal/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/home/jharjanto/.cabal/bin:/home/jharjanto/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/home/jharjanto/.cabal/bin:/home/jharjanto/.cabal/bin")], programLocation = FoundOnSystem {locationPath = "/usr/bin/ld"}}),("pkg-config",ConfiguredProgram {programId = "pkg-config", programVersion = Just (Version {versionBranch = [0,28], versionTags = []}), programDefaultArgs = [], programOverrideArgs = [], programOverrideEnv = [("PATH",Just "/home/jharjanto/.cabal/bin:/home/jharjanto/.cabal/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/home/jharjanto/.cabal/bin:/home/jharjanto/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/home/jharjanto/.cabal/bin:/home/jharjanto/bin:/home/jharjanto/.cabal/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/home/jharjanto/.cabal/bin:/home/jharjanto/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/home/jharjanto/.cabal/bin:/home/jharjanto/.cabal/bin")], programLocation = FoundOnSystem {locationPath = "/usr/bin/pkg-config"}}),("ranlib",ConfiguredProgram {programId = "ranlib", programVersion = Nothing, programDefaultArgs = [], programOverrideArgs = [], programOverrideEnv = [("PATH",Just "/home/jharjanto/.cabal/bin:/home/jharjanto/.cabal/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/home/jharjanto/.cabal/bin:/home/jharjanto/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/home/jharjanto/.cabal/bin:/home/jharjanto/bin:/home/jharjanto/.cabal/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/home/jharjanto/.cabal/bin:/home/jharjanto/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/home/jharjanto/.cabal/bin:/home/jharjanto/.cabal/bin")], programLocation = FoundOnSystem {locationPath = "/usr/bin/ranlib"}}),("strip",ConfiguredProgram {programId = "strip", programVersion = Nothing, programDefaultArgs = [], programOverrideArgs = [], programOverrideEnv = [("PATH",Just "/home/jharjanto/.cabal/bin:/home/jharjanto/.cabal/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/home/jharjanto/.cabal/bin:/home/jharjanto/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/home/jharjanto/.cabal/bin:/home/jharjanto/bin:/home/jharjanto/.cabal/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/home/jharjanto/.cabal/bin:/home/jharjanto/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/home/jharjanto/.cabal/bin:/home/jharjanto/.cabal/bin")], programLocation = FoundOnSystem {locationPath = "/usr/bin/strip"}}),("tar",ConfiguredProgram {programId = "tar", programVersion = Nothing, programDefaultArgs = [], programOverrideArgs = [], programOverrideEnv = [("PATH",Just "/home/jharjanto/.cabal/bin:/home/jharjanto/.cabal/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/home/jharjanto/.cabal/bin:/home/jharjanto/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/home/jharjanto/.cabal/bin:/home/jharjanto/bin:/home/jharjanto/.cabal/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/home/jharjanto/.cabal/bin:/home/jharjanto/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/home/jharjanto/.cabal/bin:/home/jharjanto/.cabal/bin")], programLocation = FoundOnSystem {locationPath = "/usr/bin/tar"}})], withPackageDB = [GlobalPackageDB,UserPackageDB], withVanillaLib = True, withProfLib = False, withSharedLib = True, withDynExe = False, withProfExe = False, withOptimization = NormalOptimisation, withGHCiLib = False, splitObjs = False, stripExes = True, progPrefix = "", progSuffix = ""}